name: Build and Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: 030015548744.dkr.ecr.us-east-1.amazonaws.com/impower
  ECS_SERVICE: impower                 
  ECS_CLUSTER: arn:aws:ecs:us-east-1:030015548744:cluster/impower              

permissions:
  contents: read

# Build just service for now, add site after this is ready
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # for simplicityâ€™s sake to start, just rebuild our three containers on push
    - name: Build/push Service
      id: build-image-service
      env:
        SUB_REGISTRY: service
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG ./$SUB_REGISTRY
        docker push $ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG
        echo "image=$ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    - name: Build/push Site
      id: build-image-site
      env:
        SUB_REGISTRY: site
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG ./$SUB_REGISTRY
        docker push $ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG
        echo "image=$ECR_REPOSITORY/$SUB_REGISTRY:$IMAGE_TAG" >> $GITHUB_OUTPUT